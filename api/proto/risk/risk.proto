syntax = "proto3";
import "google/protobuf/timestamp.proto";
option java_multiple_files = true;
option java_package = "io.exp.grpc.risk";
option java_outer_classname = "RiskProto";
option objc_class_prefix = "HC";

package risk;

// The greeting service definition.
service RiskService {
    // Sends a healthCheck
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

    rpc calculate(ValueRequest) returns (ValueResponse);
}

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
}

message ValueRequest{
    enum OUTPUT {
        PV_ONLY = 0;
        RISK_ONLY = 1;
        ALL=2;
    }
    enum RUNTYPE {
        FO = 0;
        XVA = 1;
        MR=2;
        CUSTOM=3;
    }

    google.protobuf.Timestamp systemDate = 1;
    string tradeId = 2 ;
    string tradeMessage = 3;
    OUTPUT outputType=4;
    RUNTYPE runType=5;
    repeated string wantedRiskSense=6;
}

message ValueResponse{
    enum Status {
        SUCCESS = 0;
        FAIL = 1;
    }
    Status status=1;
    google.protobuf.Timestamp time = 2;
    string tradeId=3;


    message Sensitivity{
        message Tenor{
            string label=1;
            double value=2;
        }
        string riskLabel=1;
        string ccy=2;
        repeated Tenor tenors=3;
    }
    message AssetSensivity{
        string assetId=1;
        string ccy = 2;
        double npv = 3;
        repeated Sensitivity senseLst=4;
    }

    repeated AssetSensivity assetSensitivityLst=6;
}


