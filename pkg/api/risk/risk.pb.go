// Code generated by protoc-gen-go. DO NOT EDIT.
// source: risk.proto

package risk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}

var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}

func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{1, 0}
}

type ValueRequest_OUTPUT int32

const (
	ValueRequest_PV_ONLY   ValueRequest_OUTPUT = 0
	ValueRequest_RISK_ONLY ValueRequest_OUTPUT = 1
	ValueRequest_ALL       ValueRequest_OUTPUT = 2
)

var ValueRequest_OUTPUT_name = map[int32]string{
	0: "PV_ONLY",
	1: "RISK_ONLY",
	2: "ALL",
}

var ValueRequest_OUTPUT_value = map[string]int32{
	"PV_ONLY":   0,
	"RISK_ONLY": 1,
	"ALL":       2,
}

func (x ValueRequest_OUTPUT) String() string {
	return proto.EnumName(ValueRequest_OUTPUT_name, int32(x))
}

func (ValueRequest_OUTPUT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{2, 0}
}

type ValueRequest_RUNTYPE int32

const (
	ValueRequest_FO     ValueRequest_RUNTYPE = 0
	ValueRequest_XVA    ValueRequest_RUNTYPE = 1
	ValueRequest_MR     ValueRequest_RUNTYPE = 2
	ValueRequest_CUSTOM ValueRequest_RUNTYPE = 3
)

var ValueRequest_RUNTYPE_name = map[int32]string{
	0: "FO",
	1: "XVA",
	2: "MR",
	3: "CUSTOM",
}

var ValueRequest_RUNTYPE_value = map[string]int32{
	"FO":     0,
	"XVA":    1,
	"MR":     2,
	"CUSTOM": 3,
}

func (x ValueRequest_RUNTYPE) String() string {
	return proto.EnumName(ValueRequest_RUNTYPE_name, int32(x))
}

func (ValueRequest_RUNTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{2, 1}
}

type ValueResponse_Status int32

const (
	ValueResponse_SUCCESS ValueResponse_Status = 0
	ValueResponse_FAIL    ValueResponse_Status = 1
)

var ValueResponse_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
}

var ValueResponse_Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
}

func (x ValueResponse_Status) String() string {
	return proto.EnumName(ValueResponse_Status_name, int32(x))
}

func (ValueResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{3, 0}
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{0}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=risk.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{1}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type ValueRequest struct {
	SystemDate           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=systemDate,proto3" json:"systemDate,omitempty"`
	TradeId              string               `protobuf:"bytes,2,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	TradeMessage         string               `protobuf:"bytes,3,opt,name=tradeMessage,proto3" json:"tradeMessage,omitempty"`
	OutputType           ValueRequest_OUTPUT  `protobuf:"varint,4,opt,name=outputType,proto3,enum=risk.ValueRequest_OUTPUT" json:"outputType,omitempty"`
	RunType              ValueRequest_RUNTYPE `protobuf:"varint,5,opt,name=runType,proto3,enum=risk.ValueRequest_RUNTYPE" json:"runType,omitempty"`
	WantedRiskSense      []string             `protobuf:"bytes,6,rep,name=wantedRiskSense,proto3" json:"wantedRiskSense,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ValueRequest) Reset()         { *m = ValueRequest{} }
func (m *ValueRequest) String() string { return proto.CompactTextString(m) }
func (*ValueRequest) ProtoMessage()    {}
func (*ValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{2}
}

func (m *ValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueRequest.Unmarshal(m, b)
}
func (m *ValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueRequest.Marshal(b, m, deterministic)
}
func (m *ValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueRequest.Merge(m, src)
}
func (m *ValueRequest) XXX_Size() int {
	return xxx_messageInfo_ValueRequest.Size(m)
}
func (m *ValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValueRequest proto.InternalMessageInfo

func (m *ValueRequest) GetSystemDate() *timestamp.Timestamp {
	if m != nil {
		return m.SystemDate
	}
	return nil
}

func (m *ValueRequest) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *ValueRequest) GetTradeMessage() string {
	if m != nil {
		return m.TradeMessage
	}
	return ""
}

func (m *ValueRequest) GetOutputType() ValueRequest_OUTPUT {
	if m != nil {
		return m.OutputType
	}
	return ValueRequest_PV_ONLY
}

func (m *ValueRequest) GetRunType() ValueRequest_RUNTYPE {
	if m != nil {
		return m.RunType
	}
	return ValueRequest_FO
}

func (m *ValueRequest) GetWantedRiskSense() []string {
	if m != nil {
		return m.WantedRiskSense
	}
	return nil
}

type ValueResponse struct {
	Status               ValueResponse_Status            `protobuf:"varint,1,opt,name=status,proto3,enum=risk.ValueResponse_Status" json:"status,omitempty"`
	Time                 *timestamp.Timestamp            `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	TradeId              string                          `protobuf:"bytes,3,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	AssetSensitivityLst  []*ValueResponse_AssetSensivity `protobuf:"bytes,6,rep,name=assetSensitivityLst,proto3" json:"assetSensitivityLst,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ValueResponse) Reset()         { *m = ValueResponse{} }
func (m *ValueResponse) String() string { return proto.CompactTextString(m) }
func (*ValueResponse) ProtoMessage()    {}
func (*ValueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{3}
}

func (m *ValueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResponse.Unmarshal(m, b)
}
func (m *ValueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResponse.Marshal(b, m, deterministic)
}
func (m *ValueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResponse.Merge(m, src)
}
func (m *ValueResponse) XXX_Size() int {
	return xxx_messageInfo_ValueResponse.Size(m)
}
func (m *ValueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResponse proto.InternalMessageInfo

func (m *ValueResponse) GetStatus() ValueResponse_Status {
	if m != nil {
		return m.Status
	}
	return ValueResponse_SUCCESS
}

func (m *ValueResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ValueResponse) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *ValueResponse) GetAssetSensitivityLst() []*ValueResponse_AssetSensivity {
	if m != nil {
		return m.AssetSensitivityLst
	}
	return nil
}

type ValueResponse_Sensitivity struct {
	RiskLabel            string                             `protobuf:"bytes,1,opt,name=riskLabel,proto3" json:"riskLabel,omitempty"`
	Ccy                  string                             `protobuf:"bytes,2,opt,name=ccy,proto3" json:"ccy,omitempty"`
	Tenors               []*ValueResponse_Sensitivity_Tenor `protobuf:"bytes,3,rep,name=tenors,proto3" json:"tenors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ValueResponse_Sensitivity) Reset()         { *m = ValueResponse_Sensitivity{} }
func (m *ValueResponse_Sensitivity) String() string { return proto.CompactTextString(m) }
func (*ValueResponse_Sensitivity) ProtoMessage()    {}
func (*ValueResponse_Sensitivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{3, 0}
}

func (m *ValueResponse_Sensitivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResponse_Sensitivity.Unmarshal(m, b)
}
func (m *ValueResponse_Sensitivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResponse_Sensitivity.Marshal(b, m, deterministic)
}
func (m *ValueResponse_Sensitivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResponse_Sensitivity.Merge(m, src)
}
func (m *ValueResponse_Sensitivity) XXX_Size() int {
	return xxx_messageInfo_ValueResponse_Sensitivity.Size(m)
}
func (m *ValueResponse_Sensitivity) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResponse_Sensitivity.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResponse_Sensitivity proto.InternalMessageInfo

func (m *ValueResponse_Sensitivity) GetRiskLabel() string {
	if m != nil {
		return m.RiskLabel
	}
	return ""
}

func (m *ValueResponse_Sensitivity) GetCcy() string {
	if m != nil {
		return m.Ccy
	}
	return ""
}

func (m *ValueResponse_Sensitivity) GetTenors() []*ValueResponse_Sensitivity_Tenor {
	if m != nil {
		return m.Tenors
	}
	return nil
}

type ValueResponse_Sensitivity_Tenor struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueResponse_Sensitivity_Tenor) Reset()         { *m = ValueResponse_Sensitivity_Tenor{} }
func (m *ValueResponse_Sensitivity_Tenor) String() string { return proto.CompactTextString(m) }
func (*ValueResponse_Sensitivity_Tenor) ProtoMessage()    {}
func (*ValueResponse_Sensitivity_Tenor) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{3, 0, 0}
}

func (m *ValueResponse_Sensitivity_Tenor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResponse_Sensitivity_Tenor.Unmarshal(m, b)
}
func (m *ValueResponse_Sensitivity_Tenor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResponse_Sensitivity_Tenor.Marshal(b, m, deterministic)
}
func (m *ValueResponse_Sensitivity_Tenor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResponse_Sensitivity_Tenor.Merge(m, src)
}
func (m *ValueResponse_Sensitivity_Tenor) XXX_Size() int {
	return xxx_messageInfo_ValueResponse_Sensitivity_Tenor.Size(m)
}
func (m *ValueResponse_Sensitivity_Tenor) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResponse_Sensitivity_Tenor.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResponse_Sensitivity_Tenor proto.InternalMessageInfo

func (m *ValueResponse_Sensitivity_Tenor) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ValueResponse_Sensitivity_Tenor) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ValueResponse_AssetSensivity struct {
	AssetId              string                       `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Ccy                  string                       `protobuf:"bytes,2,opt,name=ccy,proto3" json:"ccy,omitempty"`
	Npv                  float64                      `protobuf:"fixed64,3,opt,name=npv,proto3" json:"npv,omitempty"`
	SenseLst             []*ValueResponse_Sensitivity `protobuf:"bytes,4,rep,name=senseLst,proto3" json:"senseLst,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ValueResponse_AssetSensivity) Reset()         { *m = ValueResponse_AssetSensivity{} }
func (m *ValueResponse_AssetSensivity) String() string { return proto.CompactTextString(m) }
func (*ValueResponse_AssetSensivity) ProtoMessage()    {}
func (*ValueResponse_AssetSensivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e21a9c43a64eed, []int{3, 1}
}

func (m *ValueResponse_AssetSensivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResponse_AssetSensivity.Unmarshal(m, b)
}
func (m *ValueResponse_AssetSensivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResponse_AssetSensivity.Marshal(b, m, deterministic)
}
func (m *ValueResponse_AssetSensivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResponse_AssetSensivity.Merge(m, src)
}
func (m *ValueResponse_AssetSensivity) XXX_Size() int {
	return xxx_messageInfo_ValueResponse_AssetSensivity.Size(m)
}
func (m *ValueResponse_AssetSensivity) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResponse_AssetSensivity.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResponse_AssetSensivity proto.InternalMessageInfo

func (m *ValueResponse_AssetSensivity) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *ValueResponse_AssetSensivity) GetCcy() string {
	if m != nil {
		return m.Ccy
	}
	return ""
}

func (m *ValueResponse_AssetSensivity) GetNpv() float64 {
	if m != nil {
		return m.Npv
	}
	return 0
}

func (m *ValueResponse_AssetSensivity) GetSenseLst() []*ValueResponse_Sensitivity {
	if m != nil {
		return m.SenseLst
	}
	return nil
}

func init() {
	proto.RegisterEnum("risk.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
	proto.RegisterEnum("risk.ValueRequest_OUTPUT", ValueRequest_OUTPUT_name, ValueRequest_OUTPUT_value)
	proto.RegisterEnum("risk.ValueRequest_RUNTYPE", ValueRequest_RUNTYPE_name, ValueRequest_RUNTYPE_value)
	proto.RegisterEnum("risk.ValueResponse_Status", ValueResponse_Status_name, ValueResponse_Status_value)
	proto.RegisterType((*HealthCheckRequest)(nil), "risk.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "risk.HealthCheckResponse")
	proto.RegisterType((*ValueRequest)(nil), "risk.ValueRequest")
	proto.RegisterType((*ValueResponse)(nil), "risk.ValueResponse")
	proto.RegisterType((*ValueResponse_Sensitivity)(nil), "risk.ValueResponse.Sensitivity")
	proto.RegisterType((*ValueResponse_Sensitivity_Tenor)(nil), "risk.ValueResponse.Sensitivity.Tenor")
	proto.RegisterType((*ValueResponse_AssetSensivity)(nil), "risk.ValueResponse.AssetSensivity")
}

func init() { proto.RegisterFile("risk.proto", fileDescriptor_f3e21a9c43a64eed) }

var fileDescriptor_f3e21a9c43a64eed = []byte{
	// 697 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x8d, 0xe3, 0xc4, 0x69, 0x6e, 0xfa, 0x63, 0x4d, 0xbf, 0x85, 0x6b, 0x7d, 0x52, 0x2b, 0x0b,
	0x44, 0x37, 0xb8, 0x52, 0xda, 0x0d, 0x05, 0x84, 0xd2, 0xd0, 0xd2, 0xa8, 0x69, 0x12, 0x8d, 0x9d,
	0x40, 0x57, 0x95, 0xeb, 0x0c, 0xa9, 0x55, 0xd7, 0x36, 0x9e, 0x71, 0x20, 0x4b, 0xd8, 0xb2, 0xe3,
	0x11, 0x78, 0x03, 0x5e, 0x82, 0xe7, 0x42, 0x33, 0xb6, 0xdb, 0xb8, 0x18, 0xd8, 0xcd, 0xbd, 0x73,
	0xee, 0xcc, 0x3d, 0x67, 0xce, 0x1d, 0x80, 0xd8, 0xa3, 0x37, 0x66, 0x14, 0x87, 0x2c, 0x44, 0x35,
	0xbe, 0xd6, 0xb7, 0x67, 0x61, 0x38, 0xf3, 0xc9, 0x9e, 0xc8, 0x5d, 0x25, 0xef, 0xf7, 0x98, 0x77,
	0x4b, 0x28, 0x73, 0x6e, 0xa3, 0x14, 0x66, 0x98, 0x80, 0x4e, 0x89, 0xe3, 0xb3, 0xeb, 0xee, 0x35,
	0x71, 0x6f, 0x30, 0xf9, 0x90, 0x10, 0xca, 0x90, 0x06, 0x0d, 0x4a, 0xe2, 0xb9, 0xe7, 0x12, 0x4d,
	0xda, 0x91, 0x76, 0x9b, 0x38, 0x0f, 0x8d, 0x6f, 0x12, 0x6c, 0x16, 0x0a, 0x68, 0x14, 0x06, 0x94,
	0xa0, 0x57, 0xa0, 0x50, 0xe6, 0xb0, 0x84, 0x8a, 0x82, 0xf5, 0xf6, 0x13, 0x53, 0xf4, 0x52, 0x02,
	0x35, 0x2d, 0x7e, 0x54, 0x30, 0xb3, 0x04, 0x1c, 0x67, 0x65, 0xc6, 0x21, 0xac, 0x15, 0x36, 0x50,
	0x0b, 0x1a, 0xe3, 0xc1, 0xd9, 0x60, 0xf8, 0x76, 0xa0, 0x56, 0x78, 0x60, 0x1d, 0xe3, 0x49, 0x6f,
	0xf0, 0x46, 0x95, 0xd0, 0x06, 0xb4, 0x06, 0x43, 0xfb, 0x32, 0x4f, 0x54, 0x8d, 0x2f, 0x32, 0xac,
	0x4e, 0x1c, 0x3f, 0x21, 0x79, 0xff, 0x87, 0x00, 0x74, 0x41, 0x19, 0xb9, 0x7d, 0xed, 0xb0, 0x94,
	0x42, 0xab, 0xad, 0x9b, 0xa9, 0x16, 0x66, 0xae, 0x85, 0x69, 0xe7, 0x5a, 0xe0, 0x25, 0x34, 0xe7,
	0xce, 0x62, 0x67, 0x4a, 0x7a, 0x53, 0xad, 0x9a, 0x72, 0xcf, 0x42, 0x64, 0xc0, 0xaa, 0x58, 0x9e,
	0x13, 0x4a, 0x9d, 0x19, 0xd1, 0x64, 0xb1, 0x5d, 0xc8, 0xa1, 0x67, 0x00, 0x61, 0xc2, 0xa2, 0x84,
	0xd9, 0x8b, 0x88, 0x68, 0x35, 0xa1, 0xc5, 0x56, 0xaa, 0xc5, 0x72, 0x87, 0xe6, 0x70, 0x6c, 0x8f,
	0xc6, 0x36, 0x5e, 0x02, 0xa3, 0x03, 0x68, 0xc4, 0x49, 0x20, 0xea, 0xea, 0xa2, 0x4e, 0x2f, 0xa9,
	0xc3, 0xe3, 0x81, 0x7d, 0x31, 0x3a, 0xc6, 0x39, 0x14, 0xed, 0xc2, 0xc6, 0x47, 0x27, 0x60, 0x64,
	0x8a, 0x3d, 0x7a, 0x63, 0x91, 0x80, 0x12, 0x4d, 0xd9, 0x91, 0x77, 0x9b, 0xf8, 0x61, 0xda, 0x78,
	0x0a, 0x4a, 0x7a, 0x2b, 0x57, 0x73, 0x34, 0xb9, 0x1c, 0x0e, 0xfa, 0x17, 0x6a, 0x05, 0xad, 0x41,
	0x13, 0xf7, 0xac, 0xb3, 0x34, 0x94, 0x50, 0x03, 0xe4, 0x4e, 0xbf, 0xaf, 0x56, 0x0d, 0x13, 0x1a,
	0xd9, 0x65, 0x48, 0x81, 0xea, 0xc9, 0x50, 0xad, 0xf0, 0xbd, 0x77, 0x93, 0x8e, 0x2a, 0xf1, 0xc4,
	0x39, 0x56, 0xab, 0x08, 0x40, 0xe9, 0x8e, 0x2d, 0x7b, 0x78, 0xae, 0xca, 0xc6, 0xcf, 0x1a, 0xac,
	0x65, 0xad, 0x66, 0x9e, 0x68, 0x3f, 0xf0, 0x44, 0x91, 0x4f, 0xee, 0x86, 0x82, 0x0d, 0x90, 0x09,
	0x35, 0x6e, 0x51, 0x21, 0xfd, 0xdf, 0xdf, 0x4c, 0xe0, 0x96, 0x5f, 0x4b, 0x2e, 0xbe, 0x96, 0x0d,
	0x9b, 0x0e, 0xa5, 0x84, 0x71, 0xf2, 0x1e, 0xf3, 0xe6, 0x1e, 0x5b, 0xf4, 0x29, 0x13, 0xe2, 0xb4,
	0xda, 0x46, 0x59, 0x2b, 0x9d, 0x3b, 0x38, 0x07, 0xe3, 0xb2, 0x72, 0xfd, 0x87, 0x04, 0xad, 0xa5,
	0x14, 0xfa, 0x1f, 0x9a, 0xfc, 0xa4, 0xbe, 0x73, 0x45, 0xfc, 0x6c, 0x56, 0xee, 0x13, 0x48, 0x05,
	0xd9, 0x75, 0x17, 0x99, 0x8f, 0xf8, 0x12, 0xbd, 0x04, 0x85, 0x91, 0x20, 0x8c, 0xa9, 0x26, 0x8b,
	0x46, 0x1e, 0x97, 0x6a, 0x72, 0x7f, 0x81, 0x69, 0x73, 0x34, 0xce, 0x8a, 0xf4, 0x7d, 0xa8, 0x8b,
	0x04, 0xfa, 0x0f, 0xea, 0xfe, 0xd2, 0x9d, 0x69, 0xc0, 0xb3, 0x73, 0x7e, 0x92, 0xb8, 0x51, 0xc2,
	0x69, 0xa0, 0x7f, 0x95, 0x60, 0xbd, 0xc8, 0x8d, 0xcb, 0x26, 0xd8, 0xf5, 0xa6, 0xf9, 0x80, 0x67,
	0x61, 0x49, 0xcb, 0x2a, 0xc8, 0x41, 0x34, 0x17, 0xf2, 0x4a, 0x98, 0x2f, 0xd1, 0x73, 0x58, 0xa1,
	0xdc, 0x52, 0x5c, 0xcf, 0x9a, 0xa0, 0xb1, 0xfd, 0x0f, 0x1a, 0xf8, 0xae, 0xc0, 0xd8, 0x06, 0xe5,
	0x7e, 0xc2, 0xad, 0x71, 0xb7, 0x7b, 0x6c, 0x59, 0x6a, 0x05, 0xad, 0x40, 0xed, 0xa4, 0xd3, 0xeb,
	0xab, 0x52, 0xfb, 0xb3, 0x04, 0xad, 0xd4, 0xb5, 0xe2, 0xcb, 0x41, 0x2f, 0xa0, 0x2e, 0x3e, 0x10,
	0xa4, 0x95, 0xfc, 0x29, 0x62, 0x2a, 0xf4, 0xad, 0x3f, 0xfe, 0x36, 0xe8, 0x00, 0x9a, 0xae, 0xe3,
	0xbb, 0x89, 0xcf, 0x67, 0x1b, 0xfd, 0x3e, 0x51, 0xfa, 0x66, 0x49, 0xeb, 0x47, 0x8f, 0x40, 0xf5,
	0x42, 0x93, 0x7c, 0x8a, 0xcc, 0x59, 0x1c, 0xb9, 0x02, 0x71, 0xd4, 0xe4, 0x4d, 0x8d, 0xb8, 0x11,
	0x47, 0xd2, 0xf7, 0x6a, 0xf5, 0xb4, 0x7b, 0xa5, 0x08, 0x5b, 0xee, 0xff, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0x66, 0x2f, 0xdb, 0x78, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RiskServiceClient is the client API for RiskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RiskServiceClient interface {
	// Sends a healthCheck
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	Calculate(ctx context.Context, in *ValueRequest, opts ...grpc.CallOption) (*ValueResponse, error)
}

type riskServiceClient struct {
	cc *grpc.ClientConn
}

func NewRiskServiceClient(cc *grpc.ClientConn) RiskServiceClient {
	return &riskServiceClient{cc}
}

func (c *riskServiceClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/risk.RiskService/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *riskServiceClient) Calculate(ctx context.Context, in *ValueRequest, opts ...grpc.CallOption) (*ValueResponse, error) {
	out := new(ValueResponse)
	err := c.cc.Invoke(ctx, "/risk.RiskService/calculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RiskServiceServer is the server API for RiskService service.
type RiskServiceServer interface {
	// Sends a healthCheck
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	Calculate(context.Context, *ValueRequest) (*ValueResponse, error)
}

// UnimplementedRiskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRiskServiceServer struct {
}

func (*UnimplementedRiskServiceServer) Check(ctx context.Context, req *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedRiskServiceServer) Calculate(ctx context.Context, req *ValueRequest) (*ValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calculate not implemented")
}

func RegisterRiskServiceServer(s *grpc.Server, srv RiskServiceServer) {
	s.RegisterService(&_RiskService_serviceDesc, srv)
}

func _RiskService_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskServiceServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/risk.RiskService/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskServiceServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RiskService_Calculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskServiceServer).Calculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/risk.RiskService/Calculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskServiceServer).Calculate(ctx, req.(*ValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RiskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "risk.RiskService",
	HandlerType: (*RiskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _RiskService_Check_Handler,
		},
		{
			MethodName: "calculate",
			Handler:    _RiskService_Calculate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "risk.proto",
}
